@use "sass:math";

$grid-columns: 12;

$grid-gaps: (
	"0": 0,
	"1": 10px,
	"2": 20px,
	"3": 30px,
	"4": 40px,
	"5": 50px,
	"6": 60px,
	"7": 70px,
	"8": 80px,
	"9": 90px,
	"10": 100px,
);

//basic layout
.container {
	background-color: #fff;
	width: 100%;
	max-width: 1200px;
	margin: 0 auto;
	padding: 0 20px;
	box-sizing: border-box;
}

.row {
	display: flex;
	flex-flow: row wrap;
	align-items: center;
}

//grid gaps 
@each $key,
$value in $grid-gaps {
	.gap-#{$key}>* {
		padding: $value;
	}
}

//justify content
$justify-values: flex-start, flex-end, center, space-between, space-around;

@each $value in $justify-values {
	.justify-#{$value} {
		justify-content: $value;
	}
}

// grid columns
@mixin cols($q) {
	@for $i from 1 through $grid-columns {
		.col-#{$i}-#{$q} {
			flex-grow: 0;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}

@include xs {
	@include cols("xs");
}

@include sm {
	@include cols("sm");
}

@include lg {
	@include cols("md");
}

@include lg {
	@include cols("lg");
}

@include xl {
	@include cols("xl");
}

@include xxl {
	@include cols("xxl");
}

//grid columns without mixins col

// @include sm {
// 	@for $i from 1 through $grid-columns {
// 		.col-#{i}-sm {
// 			box-sizing: border-box;
// 			flex-grow: 0;
// 			width: math.div($i * 100%, $grid-columns);
// 		}
// 	}
// }

// @include lg {
// 	@for $i from 1 through $grid-columns {
// 		.col-#{i}-lg {
// 			box-sizing: border-box;
// 			flex-grow: 0;
// 			width: math.div($i * 100%, $grid-columns);
// 		}
// 	}
// }

// @include xl {
// 	@for $i from 1 through $grid-columns {
// 		.col-#{i}-xl {
// 			box-sizing: border-box;
// 			flex-grow: 0;
// 			width: math.div($i * 100%, $grid-columns);
// 		}
// 	}
// }

// @include xxl {
// 	@for $i from 1 through $grid-columns {
// 		.col-#{i}-xxl {
// 			box-sizing: border-box;
// 			flex-grow: 0;
// 			width: math.div($i * 100%, $grid-columns);
// 		}
// 	}
// }